 public function vectorCode(float $x,float $y, string $chr)
    {
        //echo "vectorCode($chr)\n";
        $sim=new Gsim($x, $y, $this->conf);
        $sim->goto($x,$y);
        $sim->comment("Letter ".$chr);

        switch($chr){

            case " ":
                $sim->comment("[Space]");
                break;


            case "/":
                $sim->burn()
                    ->move(0.8,1);
                    break;


            case "\\":
                $sim->move(0.8,0)->burn()
                    ->move(-0.8,1);
                    break;


            case "+":
                $sim->move(0.4,0)
                    ->move(0,0.2)->burn()
                    ->move(0,0.6)->stop()
                    ->move(-0.4,-0.4)->burn()
                    ->move(0.8,0);
                    break;


            case "-":
                $sim->move(0,0.5)->burn()
                    ->move(0.8,0);
                    break;

            case ".":
                $sim->move(0.4,0)->burn()
                    ->move(0.2,0)
                    ->move(0,0.2)
                    ->move(-0.2,0)
                    ->move(0,-0.2);
                    break;


            case "=":
                $sim->move(0,0.3)->burn()
                    ->move(0.8,0)->stop()
                    ->move(0,0.3)->burn()
                    ->move(-0.8,0);
                    break;


            case "A":
                $sim->burn()
                    ->move(0.4,1)
                    ->move(0.4,-1)->stop()
                    ->move(-0.15,0.25)->burn()
                    ->move(-0.6,0);
                    break;

            case "B":
                $sim->burn()
                    ->move(0.6,0)
                    ->move(0.2,0.2)
                    ->move(0,0.3)

                    ->move(-0.7,0)
                    ->move(0.7,0)

                    ->move(0,0.3)
                    ->move(-0.2,0.2)
                    ->move(-0.6,0)->stop()
                    ->move(0.2,0)->burn()
                    ->move(0,-1);
                    break;

            case "C"://67
                $sim->move(0.75,0)->burn()
                    ->move(-0.75,0)
                    ->move(0,1)
                    ->move(0.75,0);
                    break;


            case "D":
                $sim->burn()
                    ->move(0.6,0)
                    ->move(0.2,0.2)
                    ->move(0,0.6)
                    ->move(-0.2,0.2)
                    ->move(-0.6,0)->stop()
                    ->move(0.2,0)->burn()
                    ->move(0,-1);
                    break;

            case "E"://69
                $sim->move(0.8,1)->burn()
                    ->move(-0.8,0)
                    ->move(0,-1)
                    ->move(0.8,0)->stop()
                    ->move(-0.8,0.5)
                    ->burn()->move(0.6,0);
                    break;


            case "F"://70
                $sim->burn()
                    ->move(0,0.5)
                    ->move(0.5,0)
                    ->move(-0.5,0)
                    ->move(0,0.5)
                    ->move(0.75,0);
                    break;



            case "G"://71
                $sim->move(0.8,1)//start from top right
                    ->burn()
                    ->move(-0.8,0)
                    ->move(0,-1)
                    ->move(0.8,0)
                    ->move(0,0.5)
                    ->move(-0.4,0);
                    break;

            case "H"://72
                $sim->burn()
                    ->move(0,1)
                    ->move(0,-0.5)
                    ->move(0.75,0)
                    ->move(0,0.5)
                    ->move(0,-1);
                    break;

            case "I"://73
                $sim->burn()
                    ->move(0.75,0)
                    ->move(-0.75/2,0)
                    ->move(0,1)
                    ->move(-0.75/2,0)
                    ->move(0.75,0);
                    break;



            case "J"://74://J
                $sim->burn()
                    ->move(0.4,0.1)
                    ->move(0,0.9)
                    ->move(-0.4,0)
                    ->move(0.8,0);
                break;

            case "K":
                $sim->burn()
                    ->move(0,1)->stop()
                    ->move(0.8,0)->burn()
                    ->move(-0.8,-0.5)
                    ->move(0.8,-0.5);

            case "L":
                $sim->move(0.75,0)->burn()
                    ->move(-0.75,0)
                    ->move(0,1);
                    break;

            case "M"://78
                $sim->burn()
                    ->move(0,1)
                    ->move(0.4,-0.5)
                    ->move(0.4,0.5)
                    ->move(0,-1);
                    break;

            case "N"://78
                $sim->burn()
                    ->move(0,1)
                    ->move(0.75,-1)
                    ->move(0,1);
                    break;

            case "O"://79
                $sim->burn()
                    ->move(0,1)
                    ->move(0.75,0)
                    ->move(0,-1)
                    ->move(-0.75,0);
                    break;

            case "P"://80
                $sim->burn()
                    ->move(0,1)
                    ->move(0.75,0)
                    ->move(0,-0.5)
                    ->move(-0.75,0);
                    break;

            case "Q":
                $sim->burn()
                ->move(0,1)
                ->move(0.8,0)
                ->move(0,-0.5)
                ->move(-0.4,-0.5)
                ->move(-0.4,0)->stop()//back to origin
                ->move(0.4,0.5)->burn()
                ->move(0.4,-0.5);
                break;

            case "R"://R
                $sim->burn()
                    ->move(0,1)
                    ->move(0.75,0)
                    ->move(0,-0.5)
                    ->move(-0.75,0)
                    ->move(0.75,-0.5);
                    break;

            case "S":
                $sim->burn()
                    ->move(0.75,0)
                    ->move(0,0.5)
                    ->move(-0.75,0)
                    ->move(0,0.5)
                    ->move(0.75,0);
                    break;

            case "T":
                $sim->move(0.75/2,0)->burn()
                    ->move(0,1)
                    ->move(-0.75/2,0)
                    ->move(0.75,0);
                    break;

            case "U":
                $sim->move(0,1)->burn()
                    ->move(0,-1)
                    ->move(0.75,0)
                    ->move(0,1);
                    break;

            case "V":
                $sim->move(0,1)->burn()//move up first
                    ->move(0.4,-1)
                    ->move(0.4,1);
                    break;

            case "W":
                $sim->move(0,1)->burn()//move up first
                    ->move(0,-1)
                    ->move(0.4,0.5)
                    ->move(0.4,-0.5)
                    ->move(0,1);
                    break;


            case "X":
                $sim->burn()
                    ->move(0.8,1)->stop()
                    ->move(-0.8,0)->burn()
                    ->move(0.8,-1);
                    break;
                break;

            case "Y":
                $sim->move(0.4,0)->burn()
                    ->move(0,0.5)
                    ->move(-0.4,0.5)->stop()
                    ->move(0.4,-0.5)->burn()
                    ->move(0.4,0.5);
                break;

            case "Z":
                $sim->move(0.8,0)->burn()
                    ->move(-0.8,0)
                    ->move(0.8,1)
                    ->move(-0.8,0);
                break;

            case "0":
                $sim->burn()
                    ->move(0.8,0)
                    ->move(0,1)
                    ->move(-0.8,0)
                    ->move(0,-1)
                    ->move(0.8,1);
                    break;

            case "1":
                $sim->burn()->move(0.8,0)->stop()
                    ->move(-0.4,0)->burn()
                    ->move(0,1)
                    ->move(-0.4,-0.25);
                    break;

            case "2":
                $sim->move(0.8,0)->burn()
                    ->move(-0.8,0)
                    ->move(0.8,0.5)
                    ->move(0,0.5)
                    ->move(-0.8,0)
                    ->move(0,-0.1);
                    break;

            case "3":
                $sim->burn()
                    ->move(0.8,0)
                    ->move(0,1)
                    ->move(-0.8,0)->stop()
                    ->move(0,-0.5)->burn()
                    ->move(0.8,0);
                    break;

            case "4":
                $sim->move(0.8,0)->burn()
                    ->move(0,1)->stop()
                    ->move(-0.8,0)->burn()
                    ->move(0,-0.5)
                    ->move(0.8,0);
                    break;

            case "5":
                $sim->burn()
                    ->move(0.8,0)
                    ->move(0,0.5)
                    ->move(-0.8,0)
                    ->move(0,0.5)
                    ->move(0.8,0);
                    break;

            case "6":
                $sim->move(0,0.5)->burn()
                    ->move(0.8,0)
                    ->move(0,-0.5)
                    ->move(-0.8,0)
                    ->move(0,1)
                    ->move(0.8,0);
                    break;

            case "7":
                $sim->burn()
                    ->move(0.8,1)
                    ->move(-0.8,0)->stop()
                    ->move(0,-0.5)->burn()
                    ->move(0.8,0);
                    break;

            case "8":
                $sim->burn()
                    ->move(0.8,0)
                    ->move(0,1)
                    ->move(-0.8,0)
                    ->move(0,-1)->stop()
                    ->move(0,0.5)->burn()
                    ->move(0.8,0);
                    break;

            case "9":
                $sim->burn()
                    ->move(0.8,0)
                    ->move(0,1)
                    ->move(-0.8,0)
                    ->move(0,-0.5)
                    ->move(0.8,0);
                    break;


            default:
                echo "Error: Chr $chr not defined\n";
        }

        $sim->stop();

        return $sim->gcode();
    }